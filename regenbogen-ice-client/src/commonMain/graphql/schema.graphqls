# Eva number of a station.
scalar EvaNumber

# A ISO DateTime
scalar DateTime

# List
scalar List

# Since
scalar Since

type Autocomplete {
    guess: String!
    type: String!
    train_type: String!
}

type MostStation {
    count: Int!
    station: EvaNumber!
}

type MostTrainVehicle {
    count: Int!
    train_vehicle: TrainVehicle!
}

type TrainStop {
    cancelled: Boolean!
    station: EvaNumber!
    scheduled_departure: DateTime
    departure: DateTime
    departure_delay: Int
    scheduled_arrival: DateTime
    arrival: DateTime
    arrival_delay: Int
}

type TrainTrip {
    train_number: String!
    train_type: String!
    origin_station: EvaNumber
    destination_station: EvaNumber
    initial_departure: DateTime!
    bahn_expert: String
    stops: [TrainStop!]!
    train_vehicles: [TrainVehicle!]!
    coach_links(identificationNumber: String): [CoachLink!]!
    train_trips_information: TrainTripsInformation!
}

type TrainTripsInformation {
    average_delay(since: Since): Float!
    most_train_vehicles(limit: Int): [MostTrainVehicle]!
}

type CoachSequence {
    timestamp: DateTime!
    coaches: [Coach!]!
    train_vehicle: TrainVehicle!
}

type Coach {
    index: Int
    class: Int!
    type: String!
    uic: String!
    category: String!
    coach_sequence: CoachSequence
    coach_links(identification_number: String, limit: Int): [CoachLink!]!
}

type CoachLink {
    trip: TrainTrip!
    coach: Coach!
    identification_number: String
}

type TrainVehicle {
    building_series: String
    building_series_name: String
    train_vehicle_name: String
    train_vehicle_number: Int!
    train_type(get_raw_type: Boolean): String!
    timestamp: DateTime!
    trips(
        limit: Int
        ignore_finished_trips: Boolean
        min_trips: Int
    ): [TrainTrip!]!
    coach_sequences(limit: Int): [CoachSequence!]!
    most_stations(limit: Int): [MostStation!]!
    average_delay(since: Since): Float!
}

type Query {
    train_vehicle(q: String!, train_type: String): TrainVehicle
    train_trip(
        train_number: Int!
        train_type: String
        limit: Int
        initial_departure: DateTime
    ): [TrainTrip!]!
    train_trips_information(
        train_number: Int!
        train_type: String
    ): TrainTripsInformation!
    coach(uic: String!, limit: Int): [Coach!]!
    autocomplete(q: String!, types: List): [Autocomplete!]!
}
